"""
Plot the 2D SFS of data vs model using dadi and model functions stored in gadma2_best_dadi_models.py

Arguments:
--model: str, model name
--data: str, fs data file name
--popinfo: str, population information file name
--params: str, parameter file name - generated by gadma-run_ls_on_boot_data gadma script
--out: str, output file name for the plot
"""

import dadi
import argparse
import gadma2_best_dadi_models as models
import pandas as pd
import matplotlib.pyplot as plt
import pylab

def parse_args():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--model_name', required=True, type=str)
    parser.add_argument('--data', required=True, type=str)
    parser.add_argument('--params', required=True, type=str)
    parser.add_argument('--out', required=True, type=str)
    return parser.parse_args()

def get_params(params_file, model_name):
    table = pd.read_csv(params_file, sep=",")
    pnames = getattr(models, f"pnames_{model_name}")()
    return [table[p].median() for p in pnames]

def main():
    args = parse_args()
    data = dadi.Spectrum.from_file(args.data)
    ns = data.sample_sizes
    pts = [50, 60, 70]
    model_name = args.model_name
    model_func = dadi.Numerics.make_extrap_log_func(getattr(models, f"model_func_{model_name}"))
    p0 = get_params(args.params, model_name)
    model = model_func(p0, ns, pts)
    ll_model = dadi.Inference.ll_multinom(model, data)
    print(f"model {args.model_name} log-likelihood: {ll_model}")
    fig = pylab.figure(1)
    fig.clear()
    dadi.Plotting.plot_2d_comp_multinom(model = model, data = data, vmin = 10, resid_range = 30)
    fig.savefig(args.out)

if __name__ == '__main__':
    main()
    